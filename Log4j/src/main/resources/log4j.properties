### ������־����

# log4j 有一个默认的logger ,通过工厂 LoggerFactory.getLogger("zxp"),如果找不到,zxp loger,就会使用默认的
# 如果找到了, 也会优先在root loger输出,然后在zxp loger,继承的关系,如果加了log4j.additivity.zxp=false ,只会在zxp loger的appender输出,不继承

# 一个log4j 配置 ,只要关注两点 , 默认的log4j.rootLogger 配置,和定义的logger数,每个logger 可能有自己的appender配置.
log4j.rootLogger=info,stdout,R 

log4j.logger.zxp=info,NullAppender
log4j.additivity.zxp=false

log4j.appender.NullAppender=org.apache.log4j.varia.NullAppender


### ���������̨
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%c:%L]-[%p] %m%n

### �������־�ļ�
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
## �쳣��־�ļ���
log4j.appender.D.File=/data/logs/zxp/D.log
log4j.appender.D.DatePattern='.'yyyy-MM-dd
log4j.appender.D.Append = true
## ���INFO�������ϵ���־
log4j.appender.D.Threshold=INFO
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c:%L]-[%p] %m%n

### �����쳣��Ϣ�������ļ�
log4j.appender.R = org.apache.log4j.DailyRollingFileAppender
## �쳣��־�ļ���
log4j.appender.R.File = /data/logs/zxp/R.log
log4j.appender.R.DatePattern='.'yyyy-MM-dd
log4j.appender.R.Append = true
## ֻ���ERROR�������ϵ���־!!!
log4j.appender.R.Threshold= ERROR
log4j.appender.R.layout = org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [%c:%L]-[%p] %m%n